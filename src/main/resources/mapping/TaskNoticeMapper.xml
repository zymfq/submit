<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zym.submit.mapper.TaskNoticeMapper">
  <resultMap id="BaseResultMap" type="com.zym.submit.entity.TaskNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="term_id" jdbcType="INTEGER" property="termId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="teacher_number" jdbcType="VARCHAR" property="teacherNumber" />
    <result column="task_path" jdbcType="VARCHAR" property="taskPath" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="submit_deadline" jdbcType="DATE" property="submitDeadline" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, task_id, term_id, class_id, task_name, course_id, teacher_number, task_path, 
    is_valid, submit_deadline, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.zym.submit.entity.entityExample.TaskNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zym.submit.entity.entityExample.TaskNoticeExample">
    delete from task_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zym.submit.entity.TaskNotice">
    insert into task_notice (id, task_id, term_id, 
      class_id, task_name, course_id, 
      teacher_number, task_path, is_valid, 
      submit_deadline, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{termId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{teacherNumber,jdbcType=VARCHAR}, #{taskPath,jdbcType=VARCHAR}, #{isValid,jdbcType=TINYINT}, 
      #{submitDeadline,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zym.submit.entity.TaskNotice">
    insert into task_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="termId != null">
        term_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherNumber != null">
        teacher_number,
      </if>
      <if test="taskPath != null">
        task_path,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="submitDeadline != null">
        submit_deadline,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="termId != null">
        #{termId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherNumber != null">
        #{teacherNumber,jdbcType=VARCHAR},
      </if>
      <if test="taskPath != null">
        #{taskPath,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="submitDeadline != null">
        #{submitDeadline,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zym.submit.entity.entityExample.TaskNoticeExample" resultType="java.lang.Long">
    select count(*) from task_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.termId != null">
        term_id = #{record.termId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherNumber != null">
        teacher_number = #{record.teacherNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPath != null">
        task_path = #{record.taskPath,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
      <if test="record.submitDeadline != null">
        submit_deadline = #{record.submitDeadline,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_notice
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      term_id = #{record.termId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      teacher_number = #{record.teacherNumber,jdbcType=VARCHAR},
      task_path = #{record.taskPath,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=TINYINT},
      submit_deadline = #{record.submitDeadline,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zym.submit.entity.TaskNotice">
    update task_notice
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="termId != null">
        term_id = #{termId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherNumber != null">
        teacher_number = #{teacherNumber,jdbcType=VARCHAR},
      </if>
      <if test="taskPath != null">
        task_path = #{taskPath,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="submitDeadline != null">
        submit_deadline = #{submitDeadline,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zym.submit.entity.TaskNotice">
    update task_notice
    set task_id = #{taskId,jdbcType=INTEGER},
      term_id = #{termId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      teacher_number = #{teacherNumber,jdbcType=VARCHAR},
      task_path = #{taskPath,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=TINYINT},
      submit_deadline = #{submitDeadline,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>